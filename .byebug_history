c
continue
c
user.valid?
c
user.errors.full_messages
user.valid?
c
user.errors
user.valid?
c
user.valid?
user.errors
user.valid?
c
user.valid?
c
user.valid?
c
user.valid?
exit
user
user.valid?
c
u.errors.full_messages
u.valid?
u = build(:user,phone_no: "8726371faf" )
:user
user
continue
c
user.valid?
user = build(:user,phone_no: "8726371faf" )
c
user.errors
user.valid?
user = build(:user,phone_no: "8726371faf" )
c
user.valid?
user = build(:user,phone_no: "8726371faf" )
c
user.valid?
user = build(:user,phone_no: "8726371faf" )
c
user.valid?
user = build(:user,phone_no: "8726371faf" )
build(:user,phone_no: "8726371faf" ).should_not be_valid
c
build(:user,phone_no: "8726371faf" ).should_not be_valid
c
a.errors.full_messages
a.errors.full_message
a.errors
a.valid?
c
number
c
number
question_type
c
number
correct_answer
question_type
c
number
c
number
c
options[1].empty?
options[0].empty?
options
question_type.class
question_type
c
a.valid?
a= build(:question,question_type:0, options: ["sd","","",""] )
c
a.valid?
a= build(:question,question_type:0, options: ["sd","","",""] )
c
a.errors
a.errors.full_message
a.valid?
c
a.valid?
c
a.valid?
c
test.valid?
c
0 < 0
test.valid?
exit
test.valid?
test.duration_greater_than_zero
test.valid?
c
test.valid?
test = FactoryGirl.build(:test,duration: nil )
test.valid?
c
